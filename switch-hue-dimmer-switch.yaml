blueprint:
  name: Switch - Philips Hue Dimmer Switch
  description: 'Control your home with a Philips Hue Dimmer Switch,
    for use with [ZHA](https://www.home-assistant.io/integrations/zha/).


    Compatible with:
    - Philips Hue Dimmer Switch RWL020 (US)
    - Philips Hue Dimmer Switch RWL021 (EU)
    Note: RWL022 has a different button layout and is not compatible.


    All four buttons can be configured with short press, long press, and double press actions.


    Each button can be configured independently:
    - On button: Short press, long press, and double press
    - Up button: Short press, long press, and double press
    - Down button: Short press, long press, and double press
    - Off button: Short press, long press, and double press


    Notes:
    - This blueprint is a simplified version of stefanroelofs''s "ZHA - Philips Hue Dimmer Switch V2"
    - For light control with default dimming behavior, use the original blueprint at:
      https://gist.github.com/stefanroelofs/775e2e0a3cdb3d72a9451fb247492d59
    - The remote also supports triple, quadruple, and quintuple button presses
    - If added to ZHA before July 2020, use "Reconfigure device" in ZHA Device info'
  domain: automation
  source_url: https://github.com/Baanaaana/ha-blueprint/tree/main

  # Define the inputs for the blueprint
  input:
    remote:
      name: Philips Hue Dimmer Switch
      description: Pick either RWL020 (US) or RWL021 (EU)
      selector:
        device:
          integration: zha
          manufacturer: Philips
          entity:
            domain: sensor
            device_class: battery
# inputs for custom actions
    button_on_short_press:
      name: On button short press
      description: Action to run on short on button press.
      default: []
      selector:
        action:
    button_on_long_press:
      name: On button long press
      description: Action to run on long on button press.
      default: []
      selector:
        action:
    button_on_double_press:
      name: On button double press
      description: Action to run on double on button press.
      default: []
      selector:
        action:
    button_up_short_press:
      name: Up button short press
      description: Action to run on short up button press.
      default: []
      selector:
        action:
    button_up_long_press:
      name: Up button long press
      description: Action to run on long up button press.
      default: []
      selector:
        action:
    button_up_double_press:
      name: Up button double press
      description: Action to run on double up button press.
      default: []
      selector:
        action:
    button_down_short_press:
      name: Down button short press
      description: Action to run on short down button press.
      default: []
      selector:
        action:
    button_down_long_press:
      name: Down button long press
      description: Action to run on long down button press.
      default: []
      selector:
        action:
    button_down_double_press:
      name: Down button double press
      description: Action to run on double down button press.
      default: []
      selector:
        action:
    button_off_short_press:
      name: Off button short press
      description: Action to run on short off button press.
      default: []
      selector:
        action:
    button_off_long_press:
      name: Off button long press
      description: Action to run on long off button press.
      default: []
      selector:
        action:
    button_off_double_press:
      name: Off button double press
      description: Action to run on double off button press.
      default: []
      selector:
        action:

mode: parallel
max_exceeded: silent

# Trigger the automation when the selected dimmer remote sends an event
# Also only trigger on cluster_id 64512. This ignores the 'old' events with cluster_id 8.
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    cluster_id: 64512

action:
  - variables:
      command        : '{{ trigger.event.data.command }}'
  
  - choose:
    - conditions: '{{ command == ''on_press'' }}'
      sequence: !input button_on_short_press

    - conditions: '{{ command == ''on_hold'' }}'
      sequence: !input button_on_long_press

    - conditions: '{{ command == ''on_double_press'' }}'
      sequence: !input button_on_double_press


    - conditions: '{{ command == ''off_press'' }}'
      sequence: !input button_off_short_press

    - conditions: '{{ command == ''off_hold'' }}'
      sequence: !input button_off_long_press

    - conditions: '{{ command == ''off_double_press'' }}'
      sequence: !input button_off_double_press


    - conditions: '{{ command == ''up_press'' }}'
      sequence: !input button_up_short_press

    - conditions: '{{ command == ''up_hold'' }}'
      sequence: !input button_up_long_press

    - conditions: '{{ command == ''up_double_press'' }}'
      sequence: !input button_up_double_press


    - conditions: '{{ command == ''down_press'' }}'
      sequence: !input button_down_short_press

    - conditions: '{{ command == ''down_hold'' }}'
      sequence: !input button_down_long_press

    - conditions: '{{ command == ''down_double_press'' }}'
      sequence: !input button_down_double_press